name: CI/CD

on:
  - push

jobs:
  check-test-build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry==1.8.2

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"
          cache: "poetry"

      - run: poetry install --sync

      - run: poetry run ruff check --output-format=github
        if: "${{ matrix.python_version == '3.12' }}"

      - run: poetry run mypy --python-version "${{ matrix.python_version }}"

      - run: poetry run pytest

      - run: poetry build
        if: "${{ matrix.python_version == '3.12' }}"
      
      - uses: actions/upload-artifact@v4
        if: "${{ matrix.python_version == '3.12' }}"
        with:
          name: dist-directory
          path: dist
          retention-days: 1
          compression-level: 0

  pypi-publish:
    needs: check-test-build
    if: github.ref_type == 'tag'
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-directory
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  docker-build-push:
    runs-on: ubuntu-22.04
    needs: check-test-build
    steps:
      - uses: actions/checkout@v4
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/hypnus
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=pep440,pattern={{version}},enable=${{ github.ref_type == 'tag' }}
      - name: Login to GitHub Container Registry
        if: github.ref == '${{ github.event.repository.default_branch }}'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          # FIXME: main branch name should be a variable
          push: ${{ github.ref == 'main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max